server.port=8060
server.servlet.context-path=/

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

#spring.datasource.url=jdbc:mariadb://localhost/prescription?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
#spring.datasource.url=jdbc:mariadb://192.168.99.100/prescription?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

#spring.datasource.url=jdbc:mysql://localhost:3306/crud_db?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&autoReconnect=true&failOverReadOnly=false&maxReconnects=10
#spring.datasource.url=jdbc:mysql://192.168.99.100:3306/crud_db?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&autoReconnect=true&failOverReadOnly=false&maxReconnects=10
#spring.datasource.url=jdbc:mysql://crud_db_manik:3306/crud_db?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&autoReconnect=true&failOverReadOnly=false&maxReconnects=10
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#spring.datasource.username=manik
#spring.datasource.password=password

# I also implemented jasypt encryption for database credentials, Follow README.md file for instructions
# Use this section only if you want to implement jasypt encryption
#spring.datasource.username=ENC(7CS/4WreLKQklkPk6cc0/Q==)
#spring.datasource.password=ENC(7CS/4WreLKQklkPk6cc0/Q==)
#jasypt.encryptor.password=MY_SECRET


#EncryptedPassword: 7CS/4WreLKQklkPk6cc0/Q==
#Actual username: root
#Actual Password: root

spring.main.allow-bean-definition-overriding=true

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true